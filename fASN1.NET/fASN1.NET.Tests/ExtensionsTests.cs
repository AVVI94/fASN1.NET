namespace fASN1.NET.Tests;
public class ExtensionsTests
{
    [Fact]
    public void TryGetKeyUsage_ReturnsParsedKeyUsageFromCertificate()
    {
        var pem = "MIIFMzCCBJWgAwIBAgIEAJoT+jAKBggqhkjOPQQDAzCBhDELMAkGA1UEBhMCQ1oxLTArBgNVBAMMJEkuQ0EgVGVzdCBRdWFsaWZpZWQgMiBDQS9FQ0MgMDYvMjAxOTEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0yMjEyMDcwOTU3NDNaFw0yMzEyMDcwOTU3NDNaMGwxHDAaBgNVBAMME0VjY1Rlc3QgQ2VydFJlbmV3ZXIxCzAJBgNVBAYTAkNaMRAwDgYDVQQqDAdFY2NUZXN0MRQwEgYDVQQEDAtDZXJ0UmVuZXdlcjEXMBUGA1UEBRMOSUNBIC0gMTAwNzQxMjAwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASh6EUk91bJEMDdiYFdf+Hm3ESbbwl1vYclFthi3bims16EnfJDy+YUvsBfmNcMptIJOW6P3+03kw0EpfZNz1ZJhA0WCDMxWgLpGiiLDvK1xPyHm5DzsVN2ueH9TZQwehajggLtMIIC6TA+BgNVHREENzA1oBgGCisGAQQBgbhIBAagCgwIMTAwNzQxMjCgGQYJKwYBBAHcGQIBoAwMCjEyMzQ1Njc4OTAwDgYDVR0PAQH/BAQDAgbAMAkGA1UdEwQCMAAwggEHBgNVHSAEgf8wgfwwge4GDSsGAQQBgbhICwMeAQAwgdwwHgYIKwYBBQUHAgEWEmh0dHBzOi8vd3d3LmljYS5jejCBuQYIKwYBBQUHAgIwgawMgalUZW50byBUZXN0X1FDIHBybyBlbGVrdHJvbmlja3kgcG9kcGlzIGJ5bCB2eWRhbiB2IHNvdWxhZHUgcyBuYXJpemVuaW0gQUEgYy4geHh4L1JSUlIuVGhpcyBpcyBhIFRlc3RfUUMgZm9yIGVsZWN0cm9uaWMgc2lnbmF0dXJlIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChBQSkgTm8geHh4L1JSUlIuMAkGBwQAi+xAAQAwNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL3Rlc3RxLmljYS5jei90MnFjYTE5X2VjYy5jcmwwgYcGCCsGAQUFBwEDBHsweTAIBgYEAI5GAQEwWAYGBACORgEFME4wJRYfaHR0cHM6Ly90ZXN0cS5pY2EuY3ovcGRzX2NzLnBkZhMCY3MwJRYfaHR0cHM6Ly90ZXN0cS5pY2EuY3ovcGRzX2VuLnBkZhMCZW4wEwYGBACORgEGMAkGBwQAjkYBBgEwbAYIKwYBBQUHAQEEYDBeMC8GCCsGAQUFBzAChiNodHRwOi8vdGVzdHEuaWNhLmN6L3QycWNhMTlfZWNjLmNlcjArBggrBgEFBQcwAYYfaHR0cDovL3RvY3NwLmljYS5jei90MnFjYTE5X2VjYzAfBgNVHSMEGDAWgBQzz/bQwURs/A3qdXXejE4jvYE0LzAdBgNVHQ4EFgQU93A7WBZY5FY+LYBWMbDJAtTCCAYwEwYDVR0lBAwwCgYIKwYBBQUHAwQwCgYIKoZIzj0EAwMDgYsAMIGHAkIBnRo5Z7Z8nCQgrzA9AZQmrgxwljcSsepVw8rwDS1y9pvHVX2VvetFmcptBCeE8UemZns5CqlbeOGdGXjEEGpNYSsCQThDl9y08luXh4K4n/Nnrkvu72W8TJfKY+uaIURLFx5x+pnXeS6RidB0RgTtyb6Attnxy3nQOm9NphDsFt5kLzQi";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var keyUsage = asn.TryGetKeyUsage(out var ku);
        Assert.True(keyUsage);
        Assert.True(ku.DigitalSignature);
        Assert.True(ku.NonRepudiation);
        Assert.False(ku.KeyEncipherment);
        Assert.False(ku.DataEncipherment);
        Assert.False(ku.KeyAgreement);
        Assert.False(ku.KeyCertSign);
        Assert.False(ku.CRLSign);
        Assert.False(ku.EncipherOnly);
    }

    [Fact]
    public void TryGetICACertIntercon_ReturnsParsedSlaveIntercon()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetICACertIntercon(out var intercon);
        Assert.True(ok);
        Assert.Equal(2, intercon.InterconnectedCertificatesCount);
        Assert.False(intercon.IsMaster);
        Assert.Equal("7607910005367", intercon.MasterRequestId);
    }

    [Fact]
    public void TryGetICACertIntercon_ReturnsParsedMasterIntercon()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetICACertIntercon(out var intercon);
        Assert.True(ok);
        Assert.Equal(2, intercon.InterconnectedCertificatesCount);
        Assert.True(intercon.IsMaster);
        Assert.Equal("7607910005367", intercon.MasterRequestId);
    }

    [Fact]
    public void TryGetExtendedKeyUsage_ReturnsExtendedKeyUsageFromCertificate()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetExtendedKeyUsage(out var eku);
        Assert.True(ok);
        Assert.True(eku.EmailProtection);
        Assert.False(eku.ClientAuth);
        Assert.False(eku.ServerAuth);
        Assert.False(eku.CodeSigning);
        Assert.False(eku.TimeStamping);
        Assert.False(eku.OcspSigning);
        Assert.Null(eku.OtherEKUs);
    }

    [Fact]
    public void TryGetSAN_ReturnsSANFromCertificate()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetSubjectAlternativeName(out var san);
        Assert.Equal(3, san.Count);
        Assert.Contains(san, x => x.Kind is Tags.San.SanItemKind.Rfc822Name && ((Tags.San.Rfc822Name)x).Content == "kral@ica.cz");
    }

    [Fact]
    public void TryGetCertificateSerialNumber_ReturnsCertSn()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSerialNumber(out var sn);
        Assert.True(ok);
        Assert.Equal("10102226", sn);
    }

    [Fact]
    public void TryGetCertificateSubjectItem_ReturnsCommonNameForIssuer()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSubjectItem(SubjectItemKind.CommonName, true, out var items);
        Assert.True(ok);
        Assert.Single(items);
        Assert.Equal("I.CA Test EU Qualified CA2/RSA 04/2022", items[0]);
    }

    [Fact]
    public void TryGetCertificateSubjectItem_ReturnsCommonNameForSubject()
    {
        var pem = "MIIIgTCCBmmgAwIBAgIEAJol0jANBgkqhkiG9w0BAQ0FADCBhjEvMC0GA1UEAwwmSS5DQSBUZXN0IEVVIFF1YWxpZmllZCBDQTIvUlNBIDA0LzIwMjIxLTArBgNVBAoMJFBydm7DrSBjZXJ0aWZpa2HEjW7DrSBhdXRvcml0YSwgYS5zLjEXMBUGA1UEYQwOTlRSQ1otMjY0MzkzOTUxCzAJBgNVBAYTAkNaMB4XDTI0MDcwMzE5MDMyN1oXDTI1MDcwMzE5MDMyN1owbDEcMBoGA1UEAwwTVGVzdG92YWNpIFR3aW5zT3ByYTELMAkGA1UEBhMCQ1oxEjAQBgNVBCoMCVRlc3RvdmFjaTESMBAGA1UEBAwJVHdpbnNPcHJhMRcwFQYDVQQFEw5JQ0EgLSAxMDA3NTM4MzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK4STLVrTS0fX6PY2NYyqPb8WjqqZ+G4rM5kE3oYtbyLTcC5vxB6HPlOxfDllUNspK/dhN5W6XDG9mIhzGlUp8w6TFv7fJ9D+QbEoWrDerSpeLJWKbj8rvofEMpZ3Ll/e88Cw+3N1POC9Ps35i9t66IpdWXCNKe9wgb9NU0pn7NGLrIT8MbvJzdGbS21ZmkfnM14M6SgppBgfwfq67VVkDYoQapZr6XwsGc586B0yM5rHRIc4E8pIV+t04dJUHU5lYmUdO7lEpuRkrVLmZ6CBB5Y2sdIGnUYo6Zbw9E97mRFr8jHBOj8vFP9djQj6szZXDUeeqVCSku1dv5iLs/h105rAEAw7Q4fxbnJdIQF+OIROluDZd3STQIAaAUTg8JKY49tgAT32ZlQIL/C3Sw78Iard1kt6l/dGx42DtiGPX/9CLm0Wi3PEgk+CjR07NkkAyAEm37BVmq8QlHN2bqvpCVy4TVI24zeA4F3VqU2Fm3+iApXz3POHWrEfst4u1dpyEH4ywuClhSnM39XHzTrKGwChRSiw33E4s6rVFxiDZqYIWcU4Qqg45nYHPHsIgQdvwhxSISYSKOf7zMIcWIXfJDfNGBg8FGAslFXTmsESgXmg21n527HcflIO1lKicD2hAPG85KImoud/OoYswGLUA3AticP5sNRcIjPBG+vAMJ5AgMBAAGjggMOMIIDCjAlBgorBgEEAYG4SAQHBBcwFQwNNzYwNzkxMDAwNTM2NwIBAgEB/zAdBgorBgEEAYG4SAQDBA8aDTc2MDc5MTAwMDUzNjcwSwYDVR0RBEQwQoELa3JhbEBpY2EuY3qgGAYKKwYBBAGBuEgEBqAKDAgxMDA3NTM4M6AZBgkrBgEEAdwZAgGgDAwKMTIzNDU2Nzg5MDAOBgNVHQ8BAf8EBAMCBsAwCQYDVR0TBAIwADCB2AYDVR0gBIHQMIHNMIG/Bg0rBgEEAYG4SAoDHgEBMIGtMB0GCCsGAQUFBwIBFhFodHRwOi8vd3d3LmljYS5jejCBiwYIKwYBBQUHAgIwfwx9VGVudG8gVGVzdF9RQyBieWwgdnlkYW4gcG9kbGUgemFrb25hIG5ubi9SUlJSIFNiLiB2IHBsYXRuZW0gem5lbmkvVGhpcyBUZXN0X1FDIHdhcyBpc3N1ZWQgYWNjb3JkaW5nIHRvIEFjdCBOby4gbm5uL1JSUlIgQ29sbC4wCQYHBACL7EABADA0BgNVHR8ELTArMCmgJ6AlhiNodHRwOi8vdGVzdHEuaWNhLmN6L3QycWNhMjJfcnNhLmNybDCBhQYIKwYBBQUHAQMEeTB3MAgGBgQAjkYBATBWBgYEAI5GAQUwTDAkFh5odHRwOi8vdGVzdHEuaWNhLmN6L3Bkc19jcy5wZGYTAmNzMCQWHmh0dHA6Ly90ZXN0cS5pY2EuY3ovcGRzX2VuLnBkZhMCZW4wEwYGBACORgEGMAkGBwQAjkYBBgEwbAYIKwYBBQUHAQEEYDBeMC8GCCsGAQUFBzAChiNodHRwOi8vdGVzdHEuaWNhLmN6L3QycWNhMjJfcnNhLmNlcjArBggrBgEFBQcwAYYfaHR0cDovL3RvY3NwLmljYS5jei90MnFjYTIyX3JzYTAfBgNVHSMEGDAWgBQWpfVs7umLW5X34KPQGEns90C6nTAdBgNVHQ4EFgQUQ9/vERed0cPASUJd4o1vf6ROLoIwEwYDVR0lBAwwCgYIKwYBBQUHAwQwDQYJKoZIhvcNAQENBQADggIBAKsc09qKj9Y3xjE5UHzdFsSb2rFs9mgdboff2KKlaUXCoEWV7cZAh+sED16W+m4GnBGcafNVdltFKVAO2r9qOPQ8pZrooAGzAvknZTHpPneH4prqyfkimn54KVd5JOFSpXpDmi36Emw8eIRTFKihdZgVgQ9Qg9AkA8jm8QGfp0dju9mOP3jSnd5sT6CmmnTmII92LVypCoAymeVc8HnIuJTteyLhMcIKwbXN2l5lUJNw/P6Icr8lkQg6t4GwzKtsAvzq7F691HYKqznkHGYmAoTyd5hm1MNG/Rjz0srlWG5dME4ymP4qnksqb/B6zuxMueTavZK19odtHyWVrtBKxy9e08AM0RKLCD7ptfoDDPLjt7SrTMHGwPe9boTfhlfKVjvwVaX/6Fr2QgmFJ/M14l/j/oCxkaeZh/NXDDGh0tOmbrOrisRbLK3yzm50bkVg/WjzZSgXhRIejsqYmjNYcgUz+p7EX6GvMmtuxEyF9bhYRLhyMeOG+LDbG1+xJ8x5TBAXg4+lSSBdYEsXaOav/+UWHLvVWLBwl0zVw6a+ULlnZB+oKitN2NJsQagfCVhJTa0qqPJvELLdO627xoVQ3ccIdf6QRaH5p0dnGRTx1HqawqGN1sqUYcfrr0F5rhgaGXqXPxUNnlZnA/O1uwl+sEZ7CGCko2OxhsF9pel9WqLM";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSubjectItem(SubjectItemKind.CommonName, false, out var items);
        Assert.True(ok);
        Assert.Single(items);
        Assert.Equal("Testovaci TwinsOpra", items[0]);
    }

    [Fact]
    public void TryGetCertificateSubjectItem_ReturnsOrganizationNameForIssuer()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSubjectItem(SubjectItemKind.OrganizationName, true, out var items);
        Assert.True(ok);
        Assert.Single(items);
        Assert.Equal("První certifikační autorita, a.s.", items[0]);
    }

    [Fact]
    public void TryGetCertificateSubjectItem_ReturnsOrganizationIdentifierForIssuer()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSubjectItem(SubjectItemKind.OrganizationIdentifier, true, out var items);
        Assert.True(ok);
        Assert.Single(items);
        Assert.Equal("NTRCZ-26439395", items[0]);
    }

    [Fact]
    public void TryGetCertificateSubjectItem_ReturnsCountryNameForIssuer()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateSubjectItem(SubjectItemKind.CountryName, true, out var items);
        Assert.True(ok);
        Assert.Single(items);
        Assert.Equal("CZ", items[0]);
    }

    [Fact]
    public void TryGetCertificateNotBefore_ReturnsNotBefore()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateNotBefore(out var notBefore);
        Assert.True(ok);
        Assert.Equal(new DateTime(2024, 7, 3, 19, 03, 27, DateTimeKind.Utc), notBefore);
    }

    [Fact]
    public void TryGetCertificateNotBefore_ReturnsNotAfter()
    {
        var pem = "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";
        using var ms = new MemoryStream(Convert.FromBase64String(pem));
        var asn = Asn1Serializer.Deserialize(ms);
        Assert.NotNull(asn);
        var ok = asn.TryGetCertificateNotAfter(out var notAfter);
        Assert.True(ok);
        Assert.Equal(new DateTime(2025, 7, 3, 19, 03, 27, DateTimeKind.Utc), notAfter);
    }
}
